/**
*framework for card
* @autor: samuel ben ibgui

* @version: 0.01
* @creation: 05/01/2019
*
* @mail: benebrhi@gmail.com
**/

#ifndef __CARD_H__
#define __CARD_H__

#include"ADTErr.h"

#define RANK(i)  ((i)%13) + 2
#define SUITE(i) (i) / 13 
#define NCARDS  52
/*Ranks*/

typedef struct Card Card;
typedef enum
{
	R_TWO = 2,
	R_THREE,
	R_FOUR,
	R_FIVE,
	R_SIX,
	R_SEVEN,
	R_EIGHT,
	R_NINE,
	R_TEN,
	R_JACK,
	R_QUEEN,
	R_KING,
	R_ACE
}Rank;


/*Suites*/
typedef enum 
{
	S_CLUBS,
	S_DIAMONDS,
	S_SPADES,
	S_HEARTS
}Suite;

/** 
 * @function: CardCreate
 * create a pointer to a card
 * 
 *
 * @param _rank : the rank of the card
 * @param _suite : the Suite of the card

 * @return return pointer to the card
 * 			if err with allocation return null
 *			
 **/
Card* CardCreate(Rank _rank, Suite _suite);

/** 
 * @function: CardDestroy	
 * @brief: destroy the card if it exist and the catalog of card
 * 
 * @param _card : pointer to the card generated by CardCreate
 *
 * @return no return value
**/
void CardDestroy(Card* _card);

/** 
 * @function: initCatalog	
 * @brief: init the catalog of card with all kind of card 
 * 
 *
 * @return no return value
**/
void initCatalog();

/**
* @function: GetSuite 
* get the suite of a specific card by its id
*
* @param  _cardId : the id of the card
*
* @return the appropriate suite

*	
**/
Suite GetSuite(int _cardId);

/**
* @function: GetRank 
* get the rank of a specific card by its id
*
* @param  _cardId : the id of the card
*
* @return the appropriate rank

*	
**/
Rank GetRank(int _cardId);

/**
* @function: GetId 
* get id of a card using its rank and suite
*
* @param  _rank : the rank of the card
* @param  _suite : the suite of the card
*
* @return the appropriate id

*	
**/
int GetId(Rank _rank, Suite _suite);

/**
* @function: GetCard 
* get pointer to card according his id
*
* @param  _cardId : the id of the card
* @param _card:the pointer to the card 
* @return status of the function
			if cardId is over the number return overhead
			if card is null return uninitialized
*	
**/
void GetCard(int _cardId, Card* _card);


/** 
 * @function: CardPrint	
 * @brief: print a card using its id
 * 
 * @param _cardId: the id of the card i want to print
 * @return no return value
**/
void CardPrint(int _cardId);


#endif